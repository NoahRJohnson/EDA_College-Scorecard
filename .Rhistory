count(dummy$year)
!is.na(dummy[-1,])
!is.na(dummy[,-1])
dummy<- DDcomplete %>%
group_by(dummy$year) %>%
summarize(countnotna = sum(!is.na(x)))
dummy %>%
group_by(year) %>%
summarize_each(funs(sum(!is.na(x))))
dummy <- all_data
dummy %>%
group_by(year) %>%
summarize(count = (sum(!is.na(x))))
dummy <- all_data
dummy %>%
group_by(year)
typeof("hello")
typeof(NA)
dummy <- all_data
dummy <- sapply(dummy, function(x) if(typeof(x) == "character") x = 1)
dummy
dummy <- all_data
dummy <- lapply(dummy, function(x) if(typeof(x) == "character") x = 1)
dummy
dummy <- all_data
dummy <- if(typeof(dummy) == "character") x = 1
dummy
dummy <- ifelse(typeof(dummy) == "character", 1,)
dummy <- ifelse(typeof(dummy) == "character", 1, dummy)
dummy <- all_data
dummy <- ifelse(typeof(dummy) == "character", 1, dummy)
dummy
dummy <- all_data
setDT(dummy)[, lapply(sum(!is.na)), by = year]
setDT(dummy)[, lapply(sum(!is.na())), by = year]
setDT(dummy)[, lapply(colSums(!is.na())), by = year]
setDT(dummy)[, lapply(colSums(!is.na), by = year]
dummy <- all_data
dummy %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
dummy
dummy <- all_data
nacount <- dummy %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
nacount
completeness.by.year <- 1-nacount[,-c(1)]/yearcounts
completeness.by.year
completeness.by.year$locale
completeness.by.year$degree_urbanization
all_data[year == "1996_97"]
all_data[year == "1996_97", "degree_urbanization"]
sum(!is.na(all_data[year == "1996_97", "degree_urbanization"]))
completeness.by.year
bool.complete.by.year <- completeness.by.year > .5
bad_cols <- names(which(colSums(bool.complete.by.year)==0))
bad_cols
good_cols <- names(all_data)[!(names(all_data) %in% bad_cols)]
cleaned_data <- all_data[, good_cols]
good_cols
all_data
nrow(all_data)
ncol(all_data)
str(good_cols)
cleaned_data <- all_data[good_cols]
str(all_data)
cleaned_data <- as.data.frame(all_data)[,good_cols]
ncol(cleaned_data)
completeness.by.year$degree_urbanization
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
saveRDS(cleaned_data, file="Clean_CollegeScorecard_Rurality.rds")
cleaned_data <- readRDS("Clean_CollegeScorecard_Rurality.rds")
nacount <- all_data %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
completeness.by.year <- 1-nacount[,-c(1)]/yearcounts
bool.complete.by.year <- completeness.by.year > .5
bad_cols <- names(which(colSums(bool.complete.by.year)==0))
good_cols <- names(all_data)[!(names(all_data) %in% bad_cols)]
cleaned_data <- as.data.frame(all_data)[,good_cols]
head(cleaned_data)
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
saveRDS(cleaned_data, file="Clean_CollegeScorecard_Rurality.rds")
cleaned_data <- readRDS("Clean_CollegeScorecard_Rurality.rds")
cleaned_data
yearcounts <- c(unname(table(cleaned_data$year)))
nacount <- all_data %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
completeness.by.year <- cbind(year = nacount$year, 1-nacount[,-c(1)]/yearcounts, stringsAsFactors=FALSE)
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
saveRDS(completeness.by.year, file="Completeness_Clean_CollegeScorecard_Rurality.rds")
completeness.by.year
completeness.by.year$degrees_awarded.predominant_recoded
collegeData <- readRDS("Clean_CollegeScorecard_Rurality.rds")
collegeData$degrees_awarded.predominant_recoded
collegeData["year" == "2014_15", "degrees_awarded.predominant_recoded"]
collegeData$degrees_awarded.predominant_recoded[collegeData$year == "2014_15"]
data(collegeData)
attach(collegeData)
year
lm.predomdegree.rurality <- lm(degrees_awarded.predominant_recoded ~ rurality)
plot(lm.predomdegree.rurality)
lm.predomdegree.rurality
plot(rurality, degrees_awarded.predominant_recoded)
library(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot)
library(ggplot2)
ggplot2(collegeData[year == "2014_15"], aes(x=factor(rurality), y=degrees_awarded.predominant_recoded)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[year == "2014_15"], aes(x=factor(rurality), y=degrees_awarded.predominant_recoded)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2014_15"], aes(x=factor(rurality), y=degrees_awarded.predominant_recoded)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2014_15",], aes(x=factor(rurality), y=degrees_awarded.predominant_recoded)) + stat_summary(fun.y="mean", geom = "bar")
str(collegeData$degrees_awarded.predominant_recoded)
ggplot(collegeData[collegeData$year == "2014_15",], aes(x=factor(rurality), y=degrees_awarded.highest)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2014_15",], aes(x=factor(rurality), y=program_percentage.history)) + stat_summary(fun.y="mean", geom = "bar")
var_list = combn(names(collegeData)[11:57], 2, simplify=FALSE)
plot_list = list()
for (i in length(var_list)) {
p = ggplot(collegeData[collegeData$year == "2014_15"], aes_string(x=factor(rurality), y=var_list[[i]][2])) +
stat_summary(fun.y="mean", geom = "bar")
plot_list[[i]] = p
}
for (i in length(var_list)) {
p = ggplot(collegeData[collegeData$year == "2014_15",], aes_string(x=factor(rurality), y=var_list[[i]][2])) +
stat_summary(fun.y="mean", geom = "bar")
plot_list[[i]] = p
}
pdf("plots.pdf")
for (i in length(var_list)) {
print(plot_list[[i]])
}
for (i in length(plot_list)) {
print(plot_list[[i]])
}
pdf("plots.pdf")
for (i in length(plot_list)) {
print(plot_list[[i]])
}
length(plot_list)
head(plot_list)
var_list
var_list = (names(collegeData)[11:57]
# Make plots.
plot_list = list()
var_list = names(collegeData)[11:57]
var_list
plot_list = list()
var_list[1]
for (i in length(var_list)) {
p = ggplot(collegeData[collegeData$year == "2014_15",], aes_string(x=factor(rurality), y=var_list[i])) +
stat_summary(fun.y="mean", geom = "bar")
plot_list[i] = p
}
plot_list
pdf("plots.pdf")
for (i in length(plot_list)) {
print(plot_list[[i]])
}
dev.off()
plot_list = list()
for (i in length(var_list)) {
p = ggplot(collegeData[collegeData$year == "2014_15",], aes(x=factor(rurality), y=var_list[i])) +
stat_summary(fun.y="mean", geom = "bar")
plot_list[i] = p
}
var_list = names(collegeData)[15:52]
plot_list = list()
for (i in length(var_list)) {
p = ggplot(collegeData[collegeData$year == "2014_15",], aes(x=factor(rurality), y=var_list[i])) +
stat_summary(fun.y="mean", geom = "bar")
plot_list[i] = p
}
rowSums(completeness.by.year[,c(15:52)] != 0)
var_list = names(collegeData)[15:52]
plot_list = list()
for (i in length(var_list)) {
p = ggplot(collegeData[collegeData$year == "2014_16",], aes(x=factor(rurality), y=var_list[i])) +
stat_summary(fun.y="mean", geom = "bar")
plot_list[i] = p
}
for (i in length(var_list)) {
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[i])) +
stat_summary(fun.y="mean", geom = "bar")
plot_list[i] = p
}
for (i in c(15:52)) {
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[i])) +
stat_summary(fun.y="mean", geom = "bar")
plot_list[i] = p
}
plot_list
for (i in c(15:52)) {
print(plot_list[[i]])
}
p[[1]]
p[1]
plot_list[1]
plot_list[[15]]
plot_list[15]
for (i in 1) {
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[i])) +
stat_summary(fun.y="mean", geom = "bar")
test[i] = p
}
test = list()
for (i in 1) {
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[i])) +
stat_summary(fun.y="mean", geom = "bar")
test[i] = p
}
test = list()
for (i in 1) {
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=collegedata[,var_list[i]])) +
stat_summary(fun.y="mean", geom = "bar")
test[i] = p
}
test
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=collegedata[,var_list[i]])) +
stat_summary(fun.y="mean", geom = "bar")
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=collegedata[,var_list[1]])) +
stat_summary(fun.y="mean", geom = "bar")
p
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=collegeData[,var_list[1]])) +
stat_summary(fun.y="mean", geom = "bar")
p
var_list[1]
as.name(var_list[1])
collegeData$as.name(var_list[1])
var_list = as.name(names(collegeData)[15:52])
var_list[1]
as.name(names(collegeData))
as.name(names(collegeData[,15:25]))
names(collegeData[1:5])
lapply(names(collegeData[1:5]), function(x) as.name(x))
sapply(names(collegeData[1:5]), function(x) as.name(x))
var_list = lapply(names(collegeData[15:52]), function(x) as.name(x))
var_list
var_list[38]
var_list[[38]]
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=(var_list[[1]]))) +
stat_summary(fun.y="mean", geom = "bar")
p
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[[1]])) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
p
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[[1]])) +
stat_summary(fun.y="mean", geom = "bar")
p
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) +
stat_summary(fun.y="mean", geom = "bar")
p
var_list = names(collegeData[15:52])
var_list
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[38])) +
stat_summary(fun.y="mean", geom = "bar")
p
var_list[38]
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[1])) +
stat_summary(fun.y="mean", geom = "bar")
p
(p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=collegeData$var_list[1])) + stat_summary(fun.y="mean", geom = "bar"))
(p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=collegeData[var_list[1]]) + stat_summary(fun.y="mean", geom = "bar"))
test[i] = p
(p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=collegeData[var_list[1]])) + stat_summary(fun.y="mean", geom = "bar"))
var_list[1]
as.name[var_list[1]]
as.name(var_list[1])
(p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=as.name(var_list[1]))) + stat_summary(fun.y="mean", geom = "bar"))
var_list = names(collegeData[15:52])
as.name(var_list[1])
(p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=names(collegeData)[15])) + stat_summary(fun.y="mean", geom = "bar"))
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
p
var_list = combn(names(iris)[1:3], 2, simplify=FALSE)
plot_list = list()
for (i in 1:3) {
p = ggplot(iris, aes_string(x=var_list[[i]][1], y=var_list[[i]][2])) +
geom_point(size=3, aes(colour=Species))
plot_list[[i]] = p
}
pdf("plots.pdf")
for (i in 1:3) {
print(plot_list[[i]])
}
plot_list[[1]]
var_list = combn(names(collegeData)[15:18], 2, simplify=FALSE)
for (i in 1:3) {
p = ggplot(collegeData[c(1:50),], aes_string(x=var_list[[i]][1], y=var_list[[i]][2])) +
geom_point(size=3, aes(colour=Species))
plot_list[[i]] = p
}
plot_list[[1]]
for (i in 1:3) {
p = ggplot(collegeData[c(1:50),], aes_string(x=var_list[[i]][1], y=var_list[[i]][2])) +
geom_point(size=3)
plot_list[[i]] = p
}
plot_list[[1]]
var_list = combn(names(collegeData)[15:18], simplify=FALSE)
var_list = combn(names(collegeData)[15:18], 1, simplify=FALSE)
var_list = combn(names(collegeData)[15:18], 1, simplify=FALSE)
plot_list = list()
for (i in 1:3) {
p = ggplot(collegeData[c(1:50),], aes_string(x=rurality, y=var_list[[i]][1])) +
geom_point(size=3)
plot_list[[i]] = p
}
plot_list[[1]]
plot_list = list()
for (i in 1:3) {
p = ggplot(collegeData[c(1:50),], aes_string(x=rurality, y=var_list[[i]][1])) + stat_summary(fun.y="mean", geom = "bar") +
geom_point(size=3)
plot_list[[i]] = p
}
plot_list[[1]]
plot_list = list()
for (i in 1:3) {
p = ggplot(collegeData[c(1:4),], aes_string(x=rurality, y=var_list[[i]][1])) + stat_summary(fun.y="mean", geom = "bar") +
geom_point(size=3)
plot_list[[i]] = p
}
plot_list[[1]]
var_list[[1]][1]
for (i in 1:3) {
p = ggplot(collegeData[c(1:4),], aes_string(x=rurality, y=var_list[[i]][1])) + stat_summary(fun.y="mean", geom = "bar")
plot_list[[i]] = p
}
plot_list = list()
for (i in 1:3) {
p = ggplot(collegeData[c(1:4),], aes_string(x=rurality, y=var_list[[i]][1])) + stat_summary(fun.y="mean", geom = "bar")
plot_list[[i]] = p
}
plot_list[[1]]
plot_list = list()
for (i in 1:3) {
p = ggplot(collegeData[c(1:4),], aes(x=rurality, y=var_list[[i]][1])) + stat_summary(fun.y="mean", geom = "bar")
plot_list[[i]] = p
}
plot_list[[1]]
for (i in 1:3) {
ggplot(collegeData[c(1:4),], aes(x=rurality, y=var_list[[i]][1])) + stat_summary(fun.y="mean", geom = "bar")
}
ggplot(collegeData[c(1:4),], aes(x=rurality, y=var_list[[i]][1])) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=var_list[[i]][1])) + stat_summary(fun.y="mean", geom = "bar")
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
p
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
p = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
p
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
q = ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
q
dev.off()
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.ethnic_cultural_gender)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=program_percentage.mechanic_repair_technology)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality)[1:3], y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality %in% c(1:3)), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(subset(collegeData, rurality %in% c(1:3))), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16", college$rurality %in% c(1:3)], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16", collegeData$rurality %in% c(1:3)], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16", collegeData$rurality == 1:3], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16", collegeData$rurality == 1], aes(x=factor(rurality), y=program_percentage.agriculture)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=faculty_salary)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(locale), y=faculty_salary)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_25_older)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration)) + stat_summary(fun.y="mean", geom = "bar")
completeness.by.year$share_firstgeneration
collegeData[collegeData$year == "2015_16", "share_firstgeneration"]
mean(collegeData[collegeData$year == "2015_16", "share_firstgeneration"])
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(subset(collegeData[collegeData$year == "2015_16",], share_firstgeneration != "PrivacySuppressed"), aes(x=factor(rurality), y=share_firstgeneration)) + stat_summary(fun.y="mean", geom = "bar")
subset(collegeData[collegeData$year == "2015_16",], share_firstgeneration != "PrivacySuppressed")
subset(collegeData[collegeData$year == "2015_16",], share_firstgeneration != "PrivacySuppressed")[share_firstgeneration]
subset(collegeData[collegeData$year == "2015_16",], share_firstgeneration != "PrivacySuppressed")[, share_firstgeneration]
subset(collegeData[collegeData$year == "2015_16"], share_firstgeneration != "PrivacySuppressed")[, share_firstgeneration]
subset(collegeData[collegeData$year == "2015_16", "share_firstgeneration"], share_firstgeneration != "PrivacySuppressed")
all_data <- readRDS("CollegeScorecard_Rurality.rds")
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
all_data <- readRDS("CollegeScorecard_Rurality.rds")
all_data[all_data == "PrivacySuppressed"] <- NA
library(doBy)
yearcounts <- c(unname(table(all_data$year)))
nacount <- all_data %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
completeness.by.year <- 1-nacount[,-c(1)]/yearcounts
bool.complete.by.year <- completeness.by.year > .5
bad_cols <- names(which(colSums(bool.complete.by.year)==0))
good_cols <- names(all_data)[!(names(all_data) %in% bad_cols)]
cleaned_data <- as.data.frame(all_data)[,good_cols]
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
saveRDS(cleaned_data, file="Clean_CollegeScorecard_Rurality.rds")
yearcounts <- c(unname(table(cleaned_data$year)))
nacount <- all_data %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
completeness.by.year <- cbind(year = nacount$year, 1-nacount[,-c(1)]/yearcounts, stringsAsFactors=FALSE)
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
saveRDS(completeness.by.year, file="Completeness_Clean_CollegeScorecard_Rurality.rds")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration)) + stat_summary(fun.y="mean", geom = "bar")
collegeData <- readRDS("Clean_CollegeScorecard_Rurality.rds")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration)) + stat_summary(fun.y="mean", geom = "bar")
collegeData$share_firstgeneration
collegeData$share_firstgeneration[year == "2015_16"]
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_25_older)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration_parents.middleschool)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_25_older)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration_parents.highschool)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=degrees_awarded.highest)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=tuition.out_of_state)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=tuition.in_state)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=attendance.academic_year)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=demographics.age_entry)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=demographics.over_23_at_entry)) + stat_summary(fun.y="mean", geom = "bar")
completeness.by.year
completeness.by.year[demographics.over_23_at_entry]
completeness.by.year$demographics.over_23_at_entry
c(completeness.by.year$year, completeness.by.year$demographics.over_23_at_entry)
completeness.by.year$year
ggplot(collegeData[collegeData$year == "2005_06",], aes(x=factor(rurality), y=demographics.over_23_at_entry)) + stat_summary(fun.y="mean", geom = "bar")
collegeData$demographics.age_entry
collegeData[year == "2005_06", demographics.age_entry]
collegeData[year == "2005_06",]$demographics.over_23_at_entry
as.numeric(collegeData[year == "2005_06",]$demographics.over_23_at_entry)
str(collegeData[year == "2005_06",]$demographics.over_23_at_entry)
str(cleaned_data)
transform(cleaned_data, share_firstgeneration = as.numeric(share_firstgeneration),
share_firstgeneration_parents.highschool = as.numeric(share_firstgeneration_parents.highschool),
share_firstgeneration_parents.middleschool = as.numeric(share_firstgeneration_parents.middleschool),
share_firstgeneration_parents.somecollege = as.numeric(share_firstgeneration_parents.somecollege),
demographics.age_entry = as.numeric(demographics.age_entry),
demographics.over_23_at_entry = as.numeric(demographics.over_23_at_entry),
demographics.first_generation = as.numeric(demographics.first_generation))
str(cleaned_data)
cleaned_data <- transform(cleaned_data, share_firstgeneration = as.numeric(share_firstgeneration),
share_firstgeneration_parents.highschool = as.numeric(share_firstgeneration_parents.highschool),
share_firstgeneration_parents.middleschool = as.numeric(share_firstgeneration_parents.middleschool),
share_firstgeneration_parents.somecollege = as.numeric(share_firstgeneration_parents.somecollege),
demographics.age_entry = as.numeric(demographics.age_entry),
demographics.over_23_at_entry = as.numeric(demographics.over_23_at_entry),
demographics.first_generation = as.numeric(demographics.first_generation))
str(cleaned_data)
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
saveRDS(cleaned_data, file="Clean_CollegeScorecard_Rurality.rds")
yearcounts <- c(unname(table(cleaned_data$year)))
nacount <- all_data %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
completeness.by.year <- cbind(year = nacount$year, 1-nacount[,-c(1)]/yearcounts, stringsAsFactors=FALSE)
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
saveRDS(completeness.by.year, file="Completeness_Clean_CollegeScorecard_Rurality.rds")
collegeData <- readRDS("Clean_CollegeScorecard_Rurality.rds")
completeness.by.year <- readRDS("Completeness_Clean_CollegeScorecard_Rurality.rds")
attach(collegeData)
collegeData
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration_parents.middleschool)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=attendance.academic_year)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2005_06",], aes(x=factor(rurality), y=demographics.over_23_at_entry)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=share_firstgeneration_parents.middleschool)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=demographics.first_generation)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=demographics.age_entry)) + stat_summary(fun.y="mean", geom = "bar")
ggplot(collegeData[collegeData$year == "2015_16",], aes(x=factor(rurality), y=title_iv.still_enrolled_by.8yrs)) + stat_summary(fun.y="mean", geom = "bar")
str(cleaned_data)
bad_cols
all_data$title_iv.depend.died_by.2yrs
subset(all_data, !is.na(title_iv.depend.died_by.2yrs))
subset(all_data, !is.na(title_iv.depend.died_by.2yrs))[,title_iv.depend.died_by.2yrs]
yearcounts <- c(unname(table(all_data$year)))
nacount <- all_data %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
completeness.by.year <- 1-nacount[,-c(1)]/yearcounts
completeness.by.year$title_iv.depend.died_by.2yrs
bool.complete.by.year <- completeness.by.year > .5
bad_cols <- names(which(colSums(bool.complete.by.year)==0))
bad_cols
all_data <- readRDS("CollegeScorecard_combinedyears.rds")
all_data$zip <-sapply(all_data$zip, function(x) substr(x, 1, 5))
data(zipcode)
nm <- c("location.lat", "location.lon")
ll <- c("latitude", "longitude")
all_data[nm] <- zipcode[match(all_data$zip, zipcode$zip), ll]
all_data$rurality <- NA
zipcoderuralitydata = read.xls("http://www.psc.isr.umich.edu/dis/data/kb/downloads/t1101_ziprural.xls", sheet=5, stringsAsFactors = FALSE)
zipcoderuralitydata$zip <- clean.zipcodes(zipcoderuralitydata$zip)
tsn <- "rurality"
zcrdn <- "ru2003"
all_data[tsn] <- zipcoderuralitydata[match(all_data$zip, zipcoderuralitydata$zip), zcrdn]
setwd('/home/kevinisagirl/Desktop/workspace/datamunging/Project/EDA_College-Scorecard/')
saveRDS(all_data, file="CollegeScorecard_Rurality.rds")
all_data[all_data == "PrivacySuppressed"] <- NA
library(doBy)
yearcounts <- c(unname(table(all_data$year)))
nacount <- all_data %>%
group_by(year) %>%
summarise_each(funs(sum(is.na(.))))
completeness.by.year <- 1-nacount[,-c(1)]/yearcounts
bool.complete.by.year <- completeness.by.year > .5
bad_cols <- names(which(colSums(bool.complete.by.year)==0))
good_cols <- names(all_data)[!(names(all_data) %in% bad_cols)]
cleaned_data <- as.data.frame(all_data)[,good_cols]
bad_cols
